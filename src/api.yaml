components:
  schemas:
    accommodation:
      
        properties:
          name:
            type: string
            required: true
            example: "The Blue Room"
          description:
            type: string
            required: true
            trim: true
            example: "this room is Blue!"
          maxGuests:
            type: number
            required: true
            example: 4
          city:
            type: string
            required: true
            example: London

servers:
  - description: ''
    url: http://localhost:3002
openapi: 3.0.3
paths:
  '/accommodation':
    get:
      description: "Returns a list of accommodations"
      operationId: "getAccommodation"
      responses:
        '200':
          description: 'returns an array of accomodations'
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/accommodation'
    post:
      description: "This operation adds a new accommodation"
      operationId: "addAccommodation"
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/accommodation'
      responses:
        '201':
          description: "Correctly added new accommodation"
        '400':
          description: "Bad request"
    '/accommodation/{id}'
      get:
      tags:
      - "accommadation"
      summary: "Find accommadation by ID"
      description: "Returns a single accommadation"
      operationId: "getAccommadationById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of accommadation to return"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/schema/accommadation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Accommadation not found"
      put:
      tags:
      - "accommadation"
      summary: "Update accommadation"
      description: "Update accommadation by id"
      operationId: "updateAccommadation"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "accommadation that needs to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated accommadation object"
        required: true
        schema:
          $ref: "#/schema/accommadation"
      responses:
      
        "400":
          description: "Invalid accommadation supplied"
        "404":
          description: "accommadation not found"
      delete:
        tags:
        -"accommodation"
        summary: "Deletes an accommodation"
        description: "This operation deletes an accommodation"
        operationId: "deleteAccomodation"
        produces:
        - "application/xml"
        - "application/json"
        parameters:
        - name: id
        in: path
        description: "accomodation id to delete"
        required: true
        type: "integer"
        format: "int64"
        responses:
          '204':
            description: "Correctly deleted accommadation"
          '400':
            description: "Invalid id"
          '404':
            description: "id not found"


