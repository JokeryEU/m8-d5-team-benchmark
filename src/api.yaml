components:
  schemas:
    accommodation:
      properties:
        name:
          type: string
          example: "The Blue Room"
        description:
          type: string
          example: "this room is Blue!"
        maxGuests:
          type: number
          example: 4
        city:
          type: string
          example: London

info:
  description: "This is a sample Accomodation server."
  version: 1.0.0
  title: "Strivago API"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
  - name: "accommodation"
    description: "Everything about Accomodation"
servers:
  - url: http://localhost:3002
    description: "Local server"
  - url: https://m8-d5-bm-prod.herokuapp.com/
    description: "Deployed server"
openapi: 3.0.3
paths:
  "/accommodation":
    get:
      tags:
        - "accommodation"
      summary: "Get all accommodations"
      description: "Returns a list of accommodations"
      operationId: "getAccommodation"
      responses:
        "200":
          description: "returns an array of accomodations"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/accommodation"
    post:
      tags:
        - "accommodation"
      summary: "create a new accommodation"
      description: "This operation adds a new accommodation"
      operationId: "addAccommodation"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/accommodation"
      responses:
        "201":
          description: "Correctly added new accommodation"
        "400":
          description: "Bad request"
  "/accommodation/{id}":
    get:
      tags:
        - "accommodation"
      summary: "Find accommadation by ID"
      description: "Returns a single accommadation"
      operationId: "getAccommadationById"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of accommadation to return"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Accommadation not found"
    put:
      tags:
        - "accommodation"
      summary: "Update accommadation"
      description: "Update accommadation by id"
      operationId: "updateAccommadation"
      parameters:
        - name: "id"
          in: "path"
          description: "accommodation that needs to be updated"
          required: true
          schema:
            type: "string"

      requestBody:
        description: Fields to update
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/accommodation"
      responses:
        "200":
          description: "Successfully modified the accommodation"
        "400":
          description: "Invalid accommadation supplied"
        "404":
          description: "accommadation not found"
    delete:
      tags:
        - "accommodation"
      summary: "Deletes an accommodation"
      description: "This operation deletes an accommodation"
      operationId: "deleteAccomodation"
      parameters:
        - name: id
          in: path
          description: "accomodation id to delete"
          required: true
          schema:
            type: "string"

      responses:
        "204":
          description: "Correctly deleted accommadation"
        "400":
          description: "Invalid id"
        "404":
          description: "id not found"
